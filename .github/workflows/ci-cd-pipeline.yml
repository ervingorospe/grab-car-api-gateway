name: CI/CD Pipeline - API Gateway

on:
  push:
    paths:
      - '**'
    branches:
      - main

env:
  DEPLOYMENT_NAME: 'grab-api-gateway' # TODO: update to your deployment name
  WORKLOAD_IDENTITY_PROVIDER: 'projects/39556335562/locations/global/workloadIdentityPools/grab-car-project/providers/github-provider'

jobs:
  build:
    runs-on: ubuntu-latest
    environment: 'development'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean install -DskipTests
        working-directory: .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/grabcar-api-gateway:latest .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/grabcar-api-gateway:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: 'development'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2' # google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: 'grabcar@able-store-452602-a5.iam.gserviceaccount.com'

      - name: Set Project
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_CLUSTER_ZONE }}

      - name: Deploy to GKE
        run: |
          kubectl apply -f deployment.yml
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide